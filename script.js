document.addEventListener("DOMContentLoaded", () => {
    const explanations = [
      "1. ÎÇòÎäî",
      "2. ÎÑàÍ∞Ä Îã§Î•∏ ÏÇ¨ÎûåÌïúÌÖå Í≥†Î∞±ÌïòÎäîÍ±∞ Ïã´ÏùÄÎç∞",
      "3. ÏïÑ ÏßÑÏßú",
      "4. ÎØ∏ÏπòÍ≤†Îã§",
      "5. ÎÇò ÏßÑÏßú ÎØ∏ÏπúÍ±∞ ÌôïÏã§ÌïúÎìØ",
      "6. ÎÇò ÎÑà Ï¢ãÏïÑÌï¥",
      "7. ÏßÑÏßú",
      "8. Ïû•ÎÇú ÏïÑÎãàÍ≥†",
      "9. Í±∞ÏßìÎßê ÏïÑÎãåÎç∞",
      "10. ÏïÑÎãàÏïº",
      "11. Ïù¥Îü∞Í±∞Î°ú Í±∞ÏßìÎßê ÏïàÌï¥",
      "12. ÏßÑÏßú ÏãúÍ∏∞ ÎÜìÏπòÎ©¥ ÌõÑÌöåÌï†Í±∞Í∞ôÏïÑÏÑú",
      "13. ÏïÑÎãàÏïº",
      "14. Ïñ¥ÎñªÍ≤å ÌïòÎ©¥ ÎØøÏùÑÎûò",
      "15. ÏßÑÏã¨Ïù∏Îç∞",
      "16. ÏßÑÏßú",
      "17. ÏßÑÏã¨Ïù¥Ïïº",
      "18. „Öã„Öã„Öã„ÖãÏßÑÏßú ÏïÑÎãåÎç∞",
      "19. ÏÜîÏßÅÌûà",
      "20. ÏïÑ Î™∞Îùº",
      "21. ÎÇò Ïù¥Îü∞Í±∏Î°ú Í±∞ÏßìÎßê Ï†àÎåÄ ÏïàÌïòÍ≥†",
      "22. ÎÑàÎ¨¥ Í∞ëÏûëÏä§ÎüΩÍ≤å ÎßêÌï¥ÏÑú",
      "23. ÏÉùÍ∞Å Ï†ïÎ¶¨Ìï† ÏãúÍ∞ÑÏù¥ ÌïÑÏöîÌïúÍ±¥ ÏïÑÎäîÎç∞",
      "24. ÏßÑÏã¨Ïù∏Í≤ÉÎßå ÏïåÏïÑÏ§´ÏúºÎ©¥ Ï¢ãÍ≤†Ïñ¥",
      "25. ÏùºÏ£ºÏùº ÌõÑ..."
    ];
  
    const explanationContainer = document.getElementById("explanation-container");
    const nextButton = document.getElementById("next-button");
    const prevButton = document.getElementById("prev-button");
    const canvas = document.getElementById("fireworks");
    const ctx = canvas.getContext("2d");
  
    let currentStep = 0;
  
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  
    function showStep(index) {
      explanationContainer.innerHTML = explanations[index];
      explanationContainer.style.opacity = "0";
      explanationContainer.style.transform = "translateY(30px)";
      setTimeout(() => {
        explanationContainer.style.opacity = "1";
        explanationContainer.style.transform = "translateY(0)";
      }, 100);
    }
  
    // "Ïù¥Ï†Ñ" Î≤ÑÌäº Ï≤òÎ¶¨
    prevButton.addEventListener("click", () => {
      if (currentStep > 0) {
        currentStep--;
        showStep(currentStep);
      }
      // "Ïù¥Ï†Ñ" Î≤ÑÌäºÏù¥ Ï≤´ Î≤àÏß∏ Îã®Í≥ÑÏóêÏÑú Îã§Ïãú Ïà®Í≤®Ïßê
      if (currentStep === 0) prevButton.style.display = "none";
      nextButton.innerHTML = '<i class="fas fa-arrow-right"></i>'; // "Îã§Ïùå ‚ñ∂" ÏïÑÏù¥ÏΩòÏúºÎ°ú Î≥ÄÍ≤Ω
    });
  
    // "Îã§Ïùå" Î≤ÑÌäº Ï≤òÎ¶¨
    nextButton.addEventListener("click", () => {
      if (currentStep < explanations.length - 1) {
        currentStep++;
        showStep(currentStep);
        prevButton.style.display = "inline-block"; // "Ïù¥Ï†Ñ" Î≤ÑÌäº Î≥¥Ïù¥Í∏∞
      } else {
        launchFireworks();
        nextButton.innerHTML = '<i class="fas fa-redo-alt"></i>'; // "Ï≤òÏùåÏúºÎ°ú üîÑ" ÏïÑÏù¥ÏΩòÏúºÎ°ú Î≥ÄÍ≤Ω
        currentStep++;
      }
  
      if (currentStep >= explanations.length) resetSteps();
    });
  
    function resetSteps() {
      currentStep = 0;
      showStep(currentStep);
      nextButton.innerHTML = '<i class="fas fa-arrow-right"></i>';
      prevButton.style.display = "none"; // "Ïù¥Ï†Ñ" Î≤ÑÌäº Ïà®Í∏∞Í∏∞
    }
  
    function launchFireworks() {
      const particles = [];
      const colors = ["#f00", "#0f0", "#00f", "#ff0", "#f0f", "#0ff"];
  
      function Particle(x, y, color) {
        this.x = x;
        this.y = y;
        this.color = color;
        this.size = Math.random() * 3 + 2;
        this.speedX = Math.random() * 6 - 3;
        this.speedY = Math.random() * 6 - 3;
        this.opacity = 1;
      }
  
      Particle.prototype.update = function () {
        this.x += this.speedX;
        this.y += this.speedY;
        this.opacity -= 0.02;
      };
  
      Particle.prototype.draw = function () {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fillStyle = this.color;
        ctx.globalAlpha = this.opacity;
        ctx.fill();
        ctx.closePath();
      };
  
      function createFirework() {
        const x = Math.random() * canvas.width;
        const y = Math.random() * canvas.height;
        const color = colors[Math.floor(Math.random() * colors.length)];
        for (let i = 0; i < 30; i++) {
          particles.push(new Particle(x, y, color));
        }
      }
  
      function animateFireworks() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        particles.forEach((particle, index) => {
          particle.update();
          particle.draw();
          if (particle.opacity <= 0) particles.splice(index, 1);
        });
        if (particles.length > 0) requestAnimationFrame(animateFireworks);
      }
  
      for (let i = 0; i < 5; i++) createFirework();
      animateFireworks();
    }
  
    // Ï≤´ Î≤àÏß∏ Îã®Í≥Ñ ÌëúÏãú
    showStep(currentStep);
  });
